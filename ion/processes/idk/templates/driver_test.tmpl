#!/usr/bin/env python

"""
@package ${test_module}
@file ${file}
@author ${author}
@brief Test cases for ${driver_name} driver
"""

__author__ = '${author}'
__license__ = 'Apache 2.0'


from nose.plugins.attrib import attr

import ion.services.mi.mi_logger

from ion.processes.idk.metadata import Metadata
from ion.processes.idk.comm_config import CommConfig


@attr('UNIT', group='mi')
class Test${driver_name}_UNIT():
    def test_b(self):
        assert 'a' == 'a'


@attr('INT', group='mi')
class Test${driver_name}_INT():
    def __init__(self):
        self.comm_config = self._get_comm_config()

    def _get_comm_config(self):
        raise Exception( "TODO: Overload for automated testing" )

    def test_a(self):
        assert 'a' == 'a'


class RunFromIDK(Test${driver_name}_INT):
    """
    This class overloads the default test class so that comm configurations can be overloaded.  This is the test class
    called from the IDK test_driver program
    """
    def _gget_comm_config(self):
        return CommConfig(Metadata())

